name: Run Android Tests
on:
  workflow_dispatch: {}
env:
  MAESTRO_CLI_NO_ANALYTICS: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew :app:assemble

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/demo/debug/app-demo-debug.apk
          if-no-files-found: error
  test-on-limbar:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        tag:
          - bookmarks
          - compose
          - follow
          - search
          - settings
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maestro CLI
        uses: dniHze/maestro-test-action@v1

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk/

      - name: Run Android instance
        uses: limbario/run-android@v0.4.1
        with:
          token: ${{ secrets.LIM_TOKEN }}

      - name: Install APK
        run: adb install apk/app-demo-debug.apk

      - name: Run maestro test
        run: maestro test .maestro --include-tags ${{ matrix.tag }}
  test-on-limbar-sharded:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maestro CLI
        uses: dniHze/maestro-test-action@v1

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk/

      - name: Run Android instance
        uses: limbario/run-android@v0.4.1
        with:
          token: ${{ secrets.LIM_TOKEN }}
          count: 5

      - name: Install APK
        run: |
          #!/bin/bash

          # Get all connected devices
          devices=$(adb devices | grep -v "List" | grep "localhost" | cut -f1)

          # Install APK on each device in parallel
          for device in $devices; do
              (
                  adb -s $device wait-for-device
                  echo "Installing on device: $device"
                  adb -s $device install apk/app-demo-debug.apk
              ) &
          done

          # Wait for all parallel installations to complete
          wait

          echo "Installation completed on all devices"

      - name: Run maestro test
        run: maestro test .maestro --shard-split=5
  test-on-emulator-parallel:
    runs-on: ubuntu-latest-4cores
    needs:
      - build
    strategy:
      matrix:
        tag:
          - bookmarks
          - compose
          - follow
          - search
          - settings
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maestro CLI
        uses: dniHze/maestro-test-action@v1

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk/

      - name: Test on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          force-avd-creation: false
          disk-size: 6000M
          heap-size: 600M
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          # The action keeps the emulator running only for one script, so installation has to be done
          # here, too. But it's local, so shouldn't take much time.
          script: adb install apk/app-demo-debug.apk && maestro test .maestro --include-tags ${{ matrix.tag }}
  test-on-single-emulator:
    runs-on: ubuntu-latest-4cores
    needs:
      - build
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maestro CLI
        uses: dniHze/maestro-test-action@v1

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk/

      - name: Test on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          disk-size: 6000M
          heap-size: 600M
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          # The action keeps the emulator running only for one script, so installation has to be done
          # here, too. But it's local, so shouldn't take much time.
          script: adb install apk/app-demo-debug.apk && maestro test .maestro
